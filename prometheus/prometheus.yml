global:
  # How frequently to scrape targets by default.
  # Default 15s
  scrape_interval: 30s
  # How frequently to evaluate rules.
  # Default 15s
  evaluation_interval: 15s
  # How long until a scrape request times out.
  # Default to 10s.
  # Required because cp-demo is using cpu throttling, so let's leave enough time to fetch the metrics in particular for the first time as it needs to compile all rexps
  scrape_timeout: 30s


rule_files:
  - 'alert.rules.yml'

alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

scrape_configs:
  - job_name: "prometheus"
    static_configs:
      - targets: ["prometheus:9090"]


  # - job_name: "node-exporter"
  #   static_configs:
  #     - targets: ["node-exporter:9100"]
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'


  - job_name: "zookeeper"
    static_configs:
      - targets:
          - "zookeeper1:8079"
          - "zookeeper2:8079"
          - "zookeeper3:8079"
        labels:
          env: "dev"
    relabel_configs:
      - source_labels: [__address__]
        target_label: hostname
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'


  - job_name: "kafka-broker"
    static_configs:
      - targets:
          - "kafka1:8080"
          - "kafka2:8080"
          - "kafka3:8080"
        labels:
          env: "dev"
    relabel_configs:
      - source_labels: [__address__]
        target_label: hostname
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'


  - job_name: "schema-registry"
    static_configs:
      - targets:
          - "schema-registry:8078"
        labels:
          env: "dev"
    relabel_configs:
      - source_labels: [__address__]
        target_label: hostname
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'


  # - job_name: "kafka-connect"
  #   static_configs:
  #     - targets:
  #         - "kafka-connect:8077"
  #       labels:
  #         env: "dev"
  #         kafka_connect_cluster_id: "cluster1"
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'


  # - job_name: "ksqldb"
  #   static_configs:
  #     - targets:
  #         - "ksqldb-server:1234"
  #       labels:
  #         env: "dev"
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'


  # - job_name: "streams-demo"
  #   static_configs:
  #     - targets:
  #         - "streams-demo:1234"
  #       labels:
  #         env: "dev"
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'

  # - job_name: "rest-proxy"
  #   static_configs:
  #     - targets:
  #         - "restproxy:1234"
  #       labels:
  #         env: "dev"
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'

  # No producer for the moment in cp-demo
  # - job_name: 'kafka-producer'
  #   static_configs:
  #     - targets:
  #         - 'kafka1:1235'
  #       labels:
  #         env: 'dev'
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'

  # No consumer for the moment in cp-demo
  # - job_name: 'kafka-consumer'
  #   static_configs:
  #     - targets:
  #         - "kafka1:1236"
  #       labels:
  #         env: 'dev'
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: hostname
  #       regex: '([^:]+)(:[0-9]+)?'
  #       replacement: '${1}'

  - job_name: "kafka-lag-exporter"
    static_configs:
      - targets:
          - "kafka-lag-exporter:8000"
        labels:
          env: "dev"
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'    
